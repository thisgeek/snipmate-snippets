# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${3}
	}${2:;}
# Immediate function
snippet (f
	(function(${1}) {
		${3:/* code */}
	}(${2}));
# if
snippet if
	if (${1:true}) {
		${2}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3: += 1}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3: -= 1}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# try
snippet try
	try {
		${1:/* code */}
	} catch(${2:e}) {
		${3:/* handle error */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10});
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
# console.log (Firebug)
snippet cl
	console.log(${1});
# Object
snippet O
	Object.
# Object.create
snippet Object.cr
	Object.create(${1:prototype}, {
		${2}
	})
# Object.freeze
snippet Object.fr
	Object.freeze(${1:object})
# Object.isFrozen
snippet Object.fr?
	Object.isFrozen(${1:object})
# Object.seal
snippet Object.se
	Object.seal(${1:object})
# Object.isSealed
snippet Object.se?
	Object.isSealed(${1:object})
# Object.preventExtensions
snippet Object.pr
	Object.preventExtensions(${1:object})
# Object.isExtensible
snippet Object.pr?
	Object.isExtensible(${1:object})
# Object.getOwnPropertyDescriptor
snippet Object.getod
	Object.getOwnPropertyDescriptor(${1:object}, ${2:"name"})
# Object.defineProperty
snippet Object.def
	Object.defineProperty(${1:object}, ${2:"name"}, {
		${3}
	})
# Object.keys
snippet Object.k
	Object.keys(${1:object})
# Object.getOwnPropertyNames
snippet Object.geton
	Object.getOwnPropertyNames(${1:object})
# JSON.parse
snippet jpar
	JSON.parse(${1:text})
# JSON.stringify
snippet jstr
	JSON.stringify(${1:object})
# Array
snippet A
	Array.
# Array.isArray
snippet Array.?
	Array.isArray(${1:object})
